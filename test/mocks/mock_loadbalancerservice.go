// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ukfast/sdk-go/pkg/service/loadbalancer (interfaces: LoadBalancerService)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	connection "github.com/ukfast/sdk-go/pkg/connection"
	loadbalancer "github.com/ukfast/sdk-go/pkg/service/loadbalancer"
	reflect "reflect"
)

// MockLoadBalancerService is a mock of LoadBalancerService interface
type MockLoadBalancerService struct {
	ctrl     *gomock.Controller
	recorder *MockLoadBalancerServiceMockRecorder
}

// MockLoadBalancerServiceMockRecorder is the mock recorder for MockLoadBalancerService
type MockLoadBalancerServiceMockRecorder struct {
	mock *MockLoadBalancerService
}

// NewMockLoadBalancerService creates a new mock instance
func NewMockLoadBalancerService(ctrl *gomock.Controller) *MockLoadBalancerService {
	mock := &MockLoadBalancerService{ctrl: ctrl}
	mock.recorder = &MockLoadBalancerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLoadBalancerService) EXPECT() *MockLoadBalancerServiceMockRecorder {
	return m.recorder
}

// CreateConfiguration mocks base method
func (m *MockLoadBalancerService) CreateConfiguration(arg0 loadbalancer.CreateConfigurationRequest) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateConfiguration", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateConfiguration indicates an expected call of CreateConfiguration
func (mr *MockLoadBalancerServiceMockRecorder) CreateConfiguration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateConfiguration", reflect.TypeOf((*MockLoadBalancerService)(nil).CreateConfiguration), arg0)
}

// DeleteConfiguration mocks base method
func (m *MockLoadBalancerService) DeleteConfiguration(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteConfiguration", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteConfiguration indicates an expected call of DeleteConfiguration
func (mr *MockLoadBalancerServiceMockRecorder) DeleteConfiguration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteConfiguration", reflect.TypeOf((*MockLoadBalancerService)(nil).DeleteConfiguration), arg0)
}

// GetConfiguration mocks base method
func (m *MockLoadBalancerService) GetConfiguration(arg0 string) (loadbalancer.Configuration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfiguration", arg0)
	ret0, _ := ret[0].(loadbalancer.Configuration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfiguration indicates an expected call of GetConfiguration
func (mr *MockLoadBalancerServiceMockRecorder) GetConfiguration(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfiguration", reflect.TypeOf((*MockLoadBalancerService)(nil).GetConfiguration), arg0)
}

// GetConfigurations mocks base method
func (m *MockLoadBalancerService) GetConfigurations(arg0 connection.APIRequestParameters) ([]loadbalancer.Configuration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigurations", arg0)
	ret0, _ := ret[0].([]loadbalancer.Configuration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfigurations indicates an expected call of GetConfigurations
func (mr *MockLoadBalancerServiceMockRecorder) GetConfigurations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigurations", reflect.TypeOf((*MockLoadBalancerService)(nil).GetConfigurations), arg0)
}

// GetConfigurationsPaginated mocks base method
func (m *MockLoadBalancerService) GetConfigurationsPaginated(arg0 connection.APIRequestParameters) (*loadbalancer.PaginatedConfiguration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigurationsPaginated", arg0)
	ret0, _ := ret[0].(*loadbalancer.PaginatedConfiguration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfigurationsPaginated indicates an expected call of GetConfigurationsPaginated
func (mr *MockLoadBalancerServiceMockRecorder) GetConfigurationsPaginated(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigurationsPaginated", reflect.TypeOf((*MockLoadBalancerService)(nil).GetConfigurationsPaginated), arg0)
}

// GetGroup mocks base method
func (m *MockLoadBalancerService) GetGroup(arg0 string) (loadbalancer.Group, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGroup", arg0)
	ret0, _ := ret[0].(loadbalancer.Group)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGroup indicates an expected call of GetGroup
func (mr *MockLoadBalancerServiceMockRecorder) GetGroup(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGroup", reflect.TypeOf((*MockLoadBalancerService)(nil).GetGroup), arg0)
}

// GetGroups mocks base method
func (m *MockLoadBalancerService) GetGroups(arg0 connection.APIRequestParameters) ([]loadbalancer.Group, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGroups", arg0)
	ret0, _ := ret[0].([]loadbalancer.Group)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGroups indicates an expected call of GetGroups
func (mr *MockLoadBalancerServiceMockRecorder) GetGroups(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGroups", reflect.TypeOf((*MockLoadBalancerService)(nil).GetGroups), arg0)
}

// GetGroupsPaginated mocks base method
func (m *MockLoadBalancerService) GetGroupsPaginated(arg0 connection.APIRequestParameters) (*loadbalancer.PaginatedGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGroupsPaginated", arg0)
	ret0, _ := ret[0].(*loadbalancer.PaginatedGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGroupsPaginated indicates an expected call of GetGroupsPaginated
func (mr *MockLoadBalancerServiceMockRecorder) GetGroupsPaginated(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGroupsPaginated", reflect.TypeOf((*MockLoadBalancerService)(nil).GetGroupsPaginated), arg0)
}

// PatchConfiguration mocks base method
func (m *MockLoadBalancerService) PatchConfiguration(arg0 string, arg1 loadbalancer.PatchConfigurationRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PatchConfiguration", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// PatchConfiguration indicates an expected call of PatchConfiguration
func (mr *MockLoadBalancerServiceMockRecorder) PatchConfiguration(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PatchConfiguration", reflect.TypeOf((*MockLoadBalancerService)(nil).PatchConfiguration), arg0, arg1)
}
