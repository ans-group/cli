// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ukfast/sdk-go/pkg/service/loadbalancer (interfaces: LoadBalancerService)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	connection "github.com/ukfast/sdk-go/pkg/connection"
	loadbalancer "github.com/ukfast/sdk-go/pkg/service/loadbalancer"
	reflect "reflect"
)

// MockLoadBalancerService is a mock of LoadBalancerService interface
type MockLoadBalancerService struct {
	ctrl     *gomock.Controller
	recorder *MockLoadBalancerServiceMockRecorder
}

// MockLoadBalancerServiceMockRecorder is the mock recorder for MockLoadBalancerService
type MockLoadBalancerServiceMockRecorder struct {
	mock *MockLoadBalancerService
}

// NewMockLoadBalancerService creates a new mock instance
func NewMockLoadBalancerService(ctrl *gomock.Controller) *MockLoadBalancerService {
	mock := &MockLoadBalancerService{ctrl: ctrl}
	mock.recorder = &MockLoadBalancerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLoadBalancerService) EXPECT() *MockLoadBalancerServiceMockRecorder {
	return m.recorder
}

// DeleteCluster mocks base method
func (m *MockLoadBalancerService) DeleteCluster(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCluster", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCluster indicates an expected call of DeleteCluster
func (mr *MockLoadBalancerServiceMockRecorder) DeleteCluster(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCluster", reflect.TypeOf((*MockLoadBalancerService)(nil).DeleteCluster), arg0)
}

// DeleteTarget mocks base method
func (m *MockLoadBalancerService) DeleteTarget(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTarget", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteTarget indicates an expected call of DeleteTarget
func (mr *MockLoadBalancerServiceMockRecorder) DeleteTarget(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTarget", reflect.TypeOf((*MockLoadBalancerService)(nil).DeleteTarget), arg0)
}

// GetCluster mocks base method
func (m *MockLoadBalancerService) GetCluster(arg0 string) (loadbalancer.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCluster", arg0)
	ret0, _ := ret[0].(loadbalancer.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCluster indicates an expected call of GetCluster
func (mr *MockLoadBalancerServiceMockRecorder) GetCluster(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCluster", reflect.TypeOf((*MockLoadBalancerService)(nil).GetCluster), arg0)
}

// GetClusters mocks base method
func (m *MockLoadBalancerService) GetClusters(arg0 connection.APIRequestParameters) ([]loadbalancer.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusters", arg0)
	ret0, _ := ret[0].([]loadbalancer.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusters indicates an expected call of GetClusters
func (mr *MockLoadBalancerServiceMockRecorder) GetClusters(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusters", reflect.TypeOf((*MockLoadBalancerService)(nil).GetClusters), arg0)
}

// GetClustersPaginated mocks base method
func (m *MockLoadBalancerService) GetClustersPaginated(arg0 connection.APIRequestParameters) (*loadbalancer.PaginatedCluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClustersPaginated", arg0)
	ret0, _ := ret[0].(*loadbalancer.PaginatedCluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClustersPaginated indicates an expected call of GetClustersPaginated
func (mr *MockLoadBalancerServiceMockRecorder) GetClustersPaginated(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClustersPaginated", reflect.TypeOf((*MockLoadBalancerService)(nil).GetClustersPaginated), arg0)
}

// GetTarget mocks base method
func (m *MockLoadBalancerService) GetTarget(arg0 string) (loadbalancer.Target, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTarget", arg0)
	ret0, _ := ret[0].(loadbalancer.Target)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTarget indicates an expected call of GetTarget
func (mr *MockLoadBalancerServiceMockRecorder) GetTarget(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTarget", reflect.TypeOf((*MockLoadBalancerService)(nil).GetTarget), arg0)
}

// GetTargets mocks base method
func (m *MockLoadBalancerService) GetTargets(arg0 connection.APIRequestParameters) ([]loadbalancer.Target, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTargets", arg0)
	ret0, _ := ret[0].([]loadbalancer.Target)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTargets indicates an expected call of GetTargets
func (mr *MockLoadBalancerServiceMockRecorder) GetTargets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTargets", reflect.TypeOf((*MockLoadBalancerService)(nil).GetTargets), arg0)
}

// GetTargetsPaginated mocks base method
func (m *MockLoadBalancerService) GetTargetsPaginated(arg0 connection.APIRequestParameters) (*loadbalancer.PaginatedTarget, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTargetsPaginated", arg0)
	ret0, _ := ret[0].(*loadbalancer.PaginatedTarget)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTargetsPaginated indicates an expected call of GetTargetsPaginated
func (mr *MockLoadBalancerServiceMockRecorder) GetTargetsPaginated(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTargetsPaginated", reflect.TypeOf((*MockLoadBalancerService)(nil).GetTargetsPaginated), arg0)
}

// PatchCluster mocks base method
func (m *MockLoadBalancerService) PatchCluster(arg0 string, arg1 loadbalancer.PatchClusterRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PatchCluster", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// PatchCluster indicates an expected call of PatchCluster
func (mr *MockLoadBalancerServiceMockRecorder) PatchCluster(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PatchCluster", reflect.TypeOf((*MockLoadBalancerService)(nil).PatchCluster), arg0, arg1)
}

// PatchTarget mocks base method
func (m *MockLoadBalancerService) PatchTarget(arg0 string, arg1 loadbalancer.PatchTargetRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PatchTarget", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// PatchTarget indicates an expected call of PatchTarget
func (mr *MockLoadBalancerServiceMockRecorder) PatchTarget(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PatchTarget", reflect.TypeOf((*MockLoadBalancerService)(nil).PatchTarget), arg0, arg1)
}
