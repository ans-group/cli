// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ukfast/sdk-go/pkg/service/ltaas (interfaces: LTaaSService)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	connection "github.com/ukfast/sdk-go/pkg/connection"
	ltaas "github.com/ukfast/sdk-go/pkg/service/ltaas"
	reflect "reflect"
)

// MockLTaaSService is a mock of LTaaSService interface
type MockLTaaSService struct {
	ctrl     *gomock.Controller
	recorder *MockLTaaSServiceMockRecorder
}

// MockLTaaSServiceMockRecorder is the mock recorder for MockLTaaSService
type MockLTaaSServiceMockRecorder struct {
	mock *MockLTaaSService
}

// NewMockLTaaSService creates a new mock instance
func NewMockLTaaSService(ctrl *gomock.Controller) *MockLTaaSService {
	mock := &MockLTaaSService{ctrl: ctrl}
	mock.recorder = &MockLTaaSServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLTaaSService) EXPECT() *MockLTaaSServiceMockRecorder {
	return m.recorder
}

// GetDomain mocks base method
func (m *MockLTaaSService) GetDomain(arg0 int) (ltaas.Domain, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDomain", arg0)
	ret0, _ := ret[0].(ltaas.Domain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDomain indicates an expected call of GetDomain
func (mr *MockLTaaSServiceMockRecorder) GetDomain(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDomain", reflect.TypeOf((*MockLTaaSService)(nil).GetDomain), arg0)
}

// GetDomains mocks base method
func (m *MockLTaaSService) GetDomains(arg0 connection.APIRequestParameters) ([]ltaas.Domain, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDomains", arg0)
	ret0, _ := ret[0].([]ltaas.Domain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDomains indicates an expected call of GetDomains
func (mr *MockLTaaSServiceMockRecorder) GetDomains(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDomains", reflect.TypeOf((*MockLTaaSService)(nil).GetDomains), arg0)
}

// GetDomainsPaginated mocks base method
func (m *MockLTaaSService) GetDomainsPaginated(arg0 connection.APIRequestParameters) (*ltaas.PaginatedDomain, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDomainsPaginated", arg0)
	ret0, _ := ret[0].(*ltaas.PaginatedDomain)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDomainsPaginated indicates an expected call of GetDomainsPaginated
func (mr *MockLTaaSServiceMockRecorder) GetDomainsPaginated(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDomainsPaginated", reflect.TypeOf((*MockLTaaSService)(nil).GetDomainsPaginated), arg0)
}

// GetTest mocks base method
func (m *MockLTaaSService) GetTest(arg0 int) (ltaas.Test, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTest", arg0)
	ret0, _ := ret[0].(ltaas.Test)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTest indicates an expected call of GetTest
func (mr *MockLTaaSServiceMockRecorder) GetTest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTest", reflect.TypeOf((*MockLTaaSService)(nil).GetTest), arg0)
}

// GetTests mocks base method
func (m *MockLTaaSService) GetTests(arg0 connection.APIRequestParameters) ([]ltaas.Test, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTests", arg0)
	ret0, _ := ret[0].([]ltaas.Test)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTests indicates an expected call of GetTests
func (mr *MockLTaaSServiceMockRecorder) GetTests(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTests", reflect.TypeOf((*MockLTaaSService)(nil).GetTests), arg0)
}

// GetTestsPaginated mocks base method
func (m *MockLTaaSService) GetTestsPaginated(arg0 connection.APIRequestParameters) (*ltaas.PaginatedTest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTestsPaginated", arg0)
	ret0, _ := ret[0].(*ltaas.PaginatedTest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTestsPaginated indicates an expected call of GetTestsPaginated
func (mr *MockLTaaSServiceMockRecorder) GetTestsPaginated(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTestsPaginated", reflect.TypeOf((*MockLTaaSService)(nil).GetTestsPaginated), arg0)
}
