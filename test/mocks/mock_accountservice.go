// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ukfast/sdk-go/pkg/service/account (interfaces: AccountService)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	connection "github.com/ukfast/sdk-go/pkg/connection"
	account "github.com/ukfast/sdk-go/pkg/service/account"
	reflect "reflect"
)

// MockAccountService is a mock of AccountService interface
type MockAccountService struct {
	ctrl     *gomock.Controller
	recorder *MockAccountServiceMockRecorder
}

// MockAccountServiceMockRecorder is the mock recorder for MockAccountService
type MockAccountServiceMockRecorder struct {
	mock *MockAccountService
}

// NewMockAccountService creates a new mock instance
func NewMockAccountService(ctrl *gomock.Controller) *MockAccountService {
	mock := &MockAccountService{ctrl: ctrl}
	mock.recorder = &MockAccountServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAccountService) EXPECT() *MockAccountServiceMockRecorder {
	return m.recorder
}

// GetContact mocks base method
func (m *MockAccountService) GetContact(arg0 int) (account.Contact, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContact", arg0)
	ret0, _ := ret[0].(account.Contact)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContact indicates an expected call of GetContact
func (mr *MockAccountServiceMockRecorder) GetContact(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContact", reflect.TypeOf((*MockAccountService)(nil).GetContact), arg0)
}

// GetContacts mocks base method
func (m *MockAccountService) GetContacts(arg0 connection.APIRequestParameters) ([]account.Contact, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContacts", arg0)
	ret0, _ := ret[0].([]account.Contact)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContacts indicates an expected call of GetContacts
func (mr *MockAccountServiceMockRecorder) GetContacts(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContacts", reflect.TypeOf((*MockAccountService)(nil).GetContacts), arg0)
}

// GetContactsPaginated mocks base method
func (m *MockAccountService) GetContactsPaginated(arg0 connection.APIRequestParameters) ([]account.Contact, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContactsPaginated", arg0)
	ret0, _ := ret[0].([]account.Contact)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContactsPaginated indicates an expected call of GetContactsPaginated
func (mr *MockAccountServiceMockRecorder) GetContactsPaginated(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContactsPaginated", reflect.TypeOf((*MockAccountService)(nil).GetContactsPaginated), arg0)
}

// GetCredits mocks base method
func (m *MockAccountService) GetCredits(arg0 connection.APIRequestParameters) ([]account.Credit, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCredits", arg0)
	ret0, _ := ret[0].([]account.Credit)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCredits indicates an expected call of GetCredits
func (mr *MockAccountServiceMockRecorder) GetCredits(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCredits", reflect.TypeOf((*MockAccountService)(nil).GetCredits), arg0)
}

// GetDetails mocks base method
func (m *MockAccountService) GetDetails() (account.Details, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDetails")
	ret0, _ := ret[0].(account.Details)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDetails indicates an expected call of GetDetails
func (mr *MockAccountServiceMockRecorder) GetDetails() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDetails", reflect.TypeOf((*MockAccountService)(nil).GetDetails))
}
